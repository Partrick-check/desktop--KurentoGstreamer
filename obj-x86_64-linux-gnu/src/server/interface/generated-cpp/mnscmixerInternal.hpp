/* Autogenerated with kurento-module-creator */

#ifndef __MNSCMIXER_INTERNAL_HPP__
#define __MNSCMIXER_INTERNAL_HPP__

#include "mnscmixer.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace mnscmixer
{

class mnscmixerMethodFocus
{
public:
  mnscmixerMethodFocus() = default;
  ~mnscmixerMethodFocus() = default;

  void invoke (std::shared_ptr<mnscmixer> obj);
  void Serialize (JsonSerializer &serializer);

  int getSink_id () {
    return sink_id;
  }

  void setSink_id (int sink_id) {
    this->sink_id = sink_id;
  }

  int getParam () {
    return param;
  }

  void setParam (int param) {
    this->param = param;
  }

private:
  int sink_id;
  int param;
};

class mnscmixerConstructor
{
public:
  mnscmixerConstructor() = default;
  ~mnscmixerConstructor() = default;

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
};

} /* mnscmixer */
} /* module */
} /* kurento */

#endif /*  __MNSCMIXER_INTERNAL_HPP__ */
