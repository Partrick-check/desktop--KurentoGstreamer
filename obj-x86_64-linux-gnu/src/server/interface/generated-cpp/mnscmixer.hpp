/* Autogenerated with kurento-module-creator */

#ifndef __MNSCMIXER_HPP__
#define __MNSCMIXER_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "Hub.hpp"

namespace kurento
{
namespace module
{
namespace mnscmixer
{
class mnscmixer;
} /* mnscmixer */
} /* module */
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::module::mnscmixer::mnscmixer> &object, JsonSerializer &serializer);
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace mnscmixer
{
class mnscmixer : public virtual Hub
{

public:
  mnscmixer() = default;
  ~mnscmixer() override = default;


  virtual void focus (int sink_id, int param) = 0;

  const std::string &getType() const override;
  const std::string &getQualifiedType() const override;
  const std::string &getModule() const override;
  const std::vector<std::string> &getHierarchy() const override;

  void Serialize(JsonSerializer &serializer) override = 0;

};

} /* mnscmixer */
} /* module */
} /* kurento */

#endif /*  __MNSCMIXER_HPP__ */
